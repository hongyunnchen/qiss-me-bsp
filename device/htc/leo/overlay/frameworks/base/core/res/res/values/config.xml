<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2009, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->
<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources>
  <!-- Flag indicating whether we should enable the automatic brightness in Settings.
         config_hardware_automatic_brightness_available is not set, so we will use software implementation -->
  <bool name="config_automatic_brightness_available">true</bool>
  <!-- disable menu hard key on HD2 in non-pattern lockscreen -->
  <bool name="config_disableMenuKeyInLockScreen">true</bool>
  <!-- Flag indicating whether the surface flinger has limited
         alpha compositing functionality in hardware.  If set, the window
         manager will disable alpha trasformation in animations where not
         strictly needed. -->
  <bool name="config_sf_limitedAlpha">false</bool>
  <!-- Flag indicating whether the surface flinger is inefficient
         at performing a blur. Used by parts of the UI to turn off
         the blur effect where it isn't worth the performance hit.
         As of Honeycomb, blurring is not supported anymore. -->
  <bool name="config_sf_slowBlur">true</bool>
  <integer-array name="config_autoBrightnessLevels">
    <item>160</item>
    <item>225</item>
    <item>320</item>
    <item>640</item>
    <item>1280</item>
    <item>2600</item>
    <item>5800</item>
    <item>8000</item>
  </integer-array>
  <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array. This array should have size one greater
         than the size of the config_autoBrightnessLevels array. -->
  <integer-array name="config_autoBrightnessLcdBacklightValues">
    <item>35</item>
    <item>35</item>
    <item>58</item>
    <item>81</item>
    <item>104</item>
    <item>127</item>
    <item>150</item>
    <item>173</item>
    <item>230</item>
  </integer-array>
  <!-- Array of output values for button backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array. This array should have size one greater
         than the size of the config_autoBrightnessLevels array. -->
  <integer-array name="config_autoBrightnessButtonBacklightValues">
    <item>255</item>
    <item>255</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
  </integer-array>
  <!-- Array of output values for keyboard backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array. This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         Leo has no keyboard so all values are zero. -->
  <integer-array name="config_autoBrightnessKeyboardBacklightValues">
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
    <item>0</item>
  </integer-array>
  <integer name="config_deskDockKeepsScreenOn">0</integer>
  <integer name="config_carDockKeepsScreenOn">1</integer>
  <!-- Default color for notification LED is white -->
  <color name="config_defaultNotificationColor">#ffffffff</color>
  <!-- Default blink frequency for notification LED is 9 seconds. -->
  <integer name="config_defaultNotificationLedOff">9000</integer>
  <!-- Component name of the service providing network location support. -->
  <string name="config_networkLocationProviderPackageName"  translatable="false">com.google.android.location</string>
  <!-- Component name of the service providing geocoder API support. -->
  <string name="config_geocodeProviderPackageName"  translatable="false">com.google.android.location</string>
  <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
  <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
  <!-- the 6th element indicates boot-time dependency-met value. -->
  <string-array translatable="false"
                name="networkAttributes">
    <item>"wifi,1,1,1,-1,true"</item>
    <item>"mobile,0,0,0,-1,true"</item>
    <item>"mobile_mms,2,0,2,60000,true"</item>
    <item>"mobile_supl,3,0,2,60000,true"</item>
    <item>"mobile_dun,4,0,3,60000,true"</item>
    <item>"mobile_hipri,5,0,3,60000,true"</item>
    <item>"mobile_bluetooth,7,7,1,-1,true"</item>
    <item>"wifi_p2p,13,1,0,-1,true"</item>
  </string-array>
  <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
  <string-array translatable="false"
                name="config_tether_usb_regexs">
    <item>"usb0"</item>
  </string-array>
  <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
  <string-array translatable="false"
                name="config_tether_wifi_regexs">
    <item>"wl0.1"</item>
  </string-array>
  <!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
  <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
    <!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
  <integer-array translatable="false"
                 name="config_tether_upstream_types">
    <item>0</item>
    <item>1</item>
    <item>4</item>
  </integer-array>
  <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
  <integer-array name="config_keyboardTapVibePattern">
    <item>30</item>
  </integer-array>
  <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
  <integer-array name="config_keyboardTapVibePattern">
    <item>30</item>
  </integer-array>
  <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
  <bool name="config_unplugTurnsOnScreen">true</bool>
  <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
        autodetected from the Configuration. -->
  <bool name="config_showNavigationBar">false</bool>
  <!-- Minimum screen brightness allowed by the power manager. -->
  <integer name="config_screenBrightnessDim">10</integer>
</resources>
